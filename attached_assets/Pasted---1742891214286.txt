Техническое задание для разработки информационной системы для Центра олимпиадной подготовкиобразовательных программ "Планета - Изумрудный город".

Общие сведения 
1.1. Наименование системы
 Информационная система для Центра олимпиадной подготовкиобразовательных программ "Планета - Изумрудный город".
1.2. Основание для разработки 
Необходимо создать информационную систему для автоматизации процессов управления учебным процессом, включая личные кабинеты для различных ролей пользователей, актуализацию расписания, управление группами, новостную ленту и мероприятия.
1.3. Заказчик разработки
 Центр олимпиадной подготовкиобразовательных программ "Планета - Изумрудный город".
1.4. Разработчик 
[Указать название компании или команды разработчиков]
1.5. Сроки разработки 
Начало разработки: [дата]
Окончание разработки: [дата]
Цель и назначение разработки
 2.1. Цель разработки 
Создание информационной системы, обеспечивающей автоматизацию процессов управления учебным процессом, взаимодействие между учащимися, преподавателями и администрацией, ведение реестра детей для отчётности, а также повышение эффективности образовательного процесса.
2.2. Назначение системы 
Система предназначена для использования учащимися, преподавателями и администрацией Центра олимпиадной подготовкиобразовательных программ "Планета - Изумрудный город" с целью управления учебным процессом, актуализации расписания, информирования о новостях центра и организации мероприятий.
Требования к системе 
3.1. Функциональные требования
 3.1.1. Личные кабинеты (ЛК) пользователей Роли пользователей:
Учащийся
Преподаватель
Администратор
Родитель
Упрощённая роль
Гость
Функционал ЛК учащегося:
Просмотр личной информации, и частичное редактирование (некоторые данные (Школа, класс, место жительства)
Просмотр расписания занятий (персонального и общего)
Просмотр личного состава своей группы (с учетом того, что ученик входит в состав нескольких групп)
Получение уведомлений о новостях и изменениях в расписании
Просмотр информации о программах.
Просмотр информации о педагогах
Возможность записаться на мероприятие без дополнительной регистрации
Функционал ЛК преподавателя:
      Создание и редактирование групп учащихся
Просмотр списка учащихся
Отправка уведомлений учащимся (по предпочтительному способу связи)
Функционал ЛК администратора:
Управление пользователями системы (добавление, редактирование, удаление)
Настройка расписания занятий (создание, редактирование и удаление предмета, решение конфликтов занятий, назначенных на одно и то же время)
Управление новостной лентой
Организация мероприятий
Конструктор форм для мероприятий, регистрации итд.
Возможность выгрузки настраиваемого списка учащихся (конструктор экспорта данных)
Функционал ЛК родителя:
Просмотр расписания занятий своихего детейребенка
Получение уведомлений о новостях и мероприятиях.
Просмотр информации о программах.
Просмотр информации о педагогах
Запись несовершеннолетнего (до 14 лет) ребёнка на посещение мероприятия, либо подтверждение согласия на посещение мероприятий, на которые записался ребенок.
Функционал ЛК упрощённой роли:
Получение уведомлений о новостях и мероприятиях
Просмотр информации о программах.
Просмотр информации о педагогах
Запись на посещение мероприятия
Просмотр расписания общего и в разбивке по критериям (по предметам, по педагогам, по смене обучения)
Функционал гостя:
Просмотр новостной ленты и мероприятий
Просмотр информации о программах.
Просмотр информации о педагогах
Регистрация при попытке записаться на мероприятие
3.1.2. Авторизация и разделение ролей
Реализовать систему регистрации и авторизации пользователей с использованием безопасных методов хранения паролей.
Обеспечить разделение доступа к функционалу системы в зависимости от роли пользователя.
Реализовать возможность восстановления пароля.
3.1.3. Актуализация расписания
Обеспечить возможность создания и редактирования расписания занятий администрацией.
Предоставить учащимся и преподавателям доступ к актуальному расписанию.
Реализовать систему уведомлений об изменениях в расписании.
3.1.4. Новостная лента
Предоставить администраторам возможность публикации новостей и объявлений.
Обеспечить отображение новостной ленты в личных кабинетах пользователей.
Реализовать систему уведомлений о новых публикациях (по предпочтительному способу связи, указанному при регистрации).
По возможности, синхронизировать новостную ленту с группой в “Вконтакте” (подтягивать публикации из группы “ИзумрудногоИзмрудного Города” при публикации).
3.1.5. Мероприятия
Реализовать функционал анонсирования мероприятий, включая указание названия, фотографии, времени, места и деталей.
Обеспечить возможность записи на мероприятия через личные кабинеты пользователей. Если пользователь - гость, то обеспечить его регистрацию в системе для записи на мероприятие.
Предоставить администраторам возможность управления списком участников мероприятий.
3.2. Нефункциональные требования 
3.2.1. Требования к безопасности
Обеспечить защиту персональных данных пользователей в соответствии с действующим законодательством.
Реализовать защиту от несанкционированного доступа и атак.
Обеспечить регулярное резервное копирование данных.
3.2.2. Требования к производительности
Система должна обеспечивать одновременную работу не менее 500 пользователей без снижения производительности.
3.2.3. Требования к интерфейсу
Интерфейс должен быть интуитивно понятным и удобным для пользователей всех ролей.
Обеспечить адаптивный дизайн для корректного отображения на различных устройствах (ПК, планшеты, смартфоны).
3.3. Требования к платформе и инструментам разработки 
3.3.1. Серверная часть (Backend)
Использовать Node.js с Express.js для разработки серверной части.
Язык программирования: JavaScript, TypeScript.
Реализовать взаимодействие с базой данных через ORM ( Sequelize).
Обеспечить поддержку API (REST) для взаимодействия с клиентской частью.
Обеспечить интеграцию с системой резервного копирования данных.
3.3.2. Клиентская часть (Frontend)
Использовать фреймворк Vue.js версии 3.
Язык программирования: TypeScript.
Реализовать маршрутизацию между страницами с помощью Vue Router.
Обеспечить управление состоянием приложения через Vue Composables.
Использовать Element Plus или другие библиотеки компонентов для стилизации интерфейса.
3.3.3. База данных
Выбор СУБД: PostgreSQL.
Структура базы данных должна поддерживать хранение информации о пользователях, расписании занятий, оценках, комментариях, новостях, мероприятиях и других данных.
Реализовать механизмы резервного копирования и восстановления данных.
3.3.4. Интеграционные требования
Обеспечить возможность подключения к сторонним системам уведомлений (например, Telegram или email).
Реализовать механизм импорта и экспорта данных (например, CSV/Excel).
4. Этапы разработки  
Сбор и анализ требований:
Проведение встречи с заказчиком для уточнения деталей.
Формирование подробного списка функциональных и нефункциональных требований.
Проектирование системы:
Разработка архитектуры системы.
Моделирование базы данных.
Разработка прототипов пользовательского интерфейса.
Разработка серверной части:
Настройка окружения.
Реализация REST API для управления пользователями, расписанием, группами, новостями и мероприятиями.
Реализация авторизации с разделением ролей.
Разработка клиентской части:
Разработка основных страниц приложения.
Интеграция с API.
Настройка системы уведомлений и новостной ленты.
Тестирование:
Функциональное тестирование серверной и клиентской частей.
Нагрузочное тестирование.
Тестирование безопасности.
Внедрение:
Установка системы на сервер заказчика.
Проведение обучающего семинара для сотрудников заказчика.
Поддержка:
Техническая поддержка в течение 3 месяцев после запуска.

	
Технические ограничения
Клиентская часть должна быть совместима с последними версиями браузеров (Chrome, Firefox, Safari).
Система должна обеспечивать поддержку устройств с минимальным разрешением экрана 360х720.






